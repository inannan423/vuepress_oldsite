(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{434:function(t,s,v){"use strict";v.r(s);var _=v(1),a=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"rdt协议简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rdt协议简介"}},[t._v("#")]),t._v(" rdt协议简介")]),t._v(" "),v("p",[v("em",[t._v("可靠数据传输")]),t._v("（Reliable Data Transfer，RDT）是一种"),v("strong",[t._v("可靠的数据传输协议")]),t._v("，它在传输层、应用层和数据链路层都很重要。\n特点："),v("em",[t._v("不出错、不重复、不失序、不丢失")]),t._v("，是计算机网络Top10的问题之一。"),v("br"),t._v("\nTCP实现了可靠数据传输。"),v("br"),t._v(" "),v("em",[t._v("rdt的使命")]),t._v("："),v("strong",[t._v("在下层依赖提供的服务不可靠的情况下，为上层提供可靠的服务")]),t._v("。"),v("br"),t._v(" "),v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h32zec0l8zj30ri0fy12t.jpg",alt:"1654831286933.png"}}),v("br"),t._v(" "),v("em",[t._v("其中涉及了一个封装和解封装的过程。")]),t._v(" 上半部分是应用层，下面是rdt提供的可靠的信道（尽管下层是不可靠的）。")]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("⚠  图解")]),t._v(" "),v("p",[t._v("在上图中，rdt_send和deliver_data()都是单向的通道，但是udt_send和rdt_rec是双向的通道。"),v("em",[t._v("我们只考虑单向的信息传输（发送方发给接收方），其实两个相反的单向就是双向的")]),t._v("。")])]),t._v(" "),v("blockquote",[v("p",[t._v("我们常用有限状态机（Finite State Machine，FSM）来描述rdt协议。箭头上的文字，横线上方是引起状态变迁的事件，下方是活动。")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("🔔 rdt协议的研究方式")]),t._v(" "),v("p",[t._v("使用"),v("em",[t._v("渐进式的方式")]),t._v("进行研究，因此从rdt1.0开始，从完全可信到逐渐不可信（接近真实情况）进行研究。")])]),t._v(" "),v("h2",{attrs:{id:"rdt1-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rdt1-0"}},[t._v("#")]),t._v(" rdt1.0")]),t._v(" "),v("blockquote",[v("p",[t._v("可靠信道上的可靠数据传输")])]),t._v(" "),v("p",[v("em",[t._v("1.0假定底层信道完全可靠，不会丢弃分组")]),t._v("。但是不可能存在这种信道。"),v("br"),t._v(" "),v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h32zpv2razj30qh07awjo.jpg",alt:"1654831951761.png"}})]),t._v(" "),v("div",{staticClass:"custom-block note"},[v("p",{staticClass:"custom-block-title"},[t._v("🌳  rdt1.0图解")]),t._v(" "),v("p",[t._v("在rdt1。0中，由于我们认为下层信道完全可信，因此我们的rdt信道只需要进行封装和解封装操作，如左边的图，当调用时，"),v("em",[t._v("创建一个rdt_send状态")]),t._v("，这个状态包含下面的活动："),v("strong",[t._v("将数据封装打包，然后通过udt发送出去（实际上，这个时候的udt我们认为是可信的）")]),t._v("，接着就等待下次的调用。在右边的接收端，由于我们认为数据完全不会丢失，所以我们"),v("em",[t._v("只创建一个rcv状态")]),t._v("，进行数据包的解封装，然后把数据传给应用层，再等待下次数据送达。")])]),t._v(" "),v("h2",{attrs:{id:"rdt2-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rdt2-0"}},[t._v("#")]),t._v(" rdt2.0")]),t._v(" "),v("blockquote",[v("p",[t._v("产生"),v("em",[t._v("位错误")]),t._v("的信道上的可靠数据传输")])]),t._v(" "),v("p",[v("em",[t._v("此时的下层信道就不再可信了")]),t._v("，"),v("strong",[t._v("但是它只可能产生位错误，即0变1、1变0，它不可能产生乱序和丢包")]),t._v("。")]),t._v(" "),v("p",[v("strong",[t._v("如何从错误中恢复？")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("🔔 ARQ协议（Automatic Repeat Request，ARQ）")]),t._v(" "),v("p",[v("em",[t._v("确认机制")]),t._v("（Acknowledgement，ACK），接收方"),v("em",[t._v("显式")]),t._v("地告知发送方分组已经接收。"),v("br"),t._v(" "),v("em",[t._v("NAK")]),t._v("：接收方"),v("em",[t._v("显式")]),t._v("地告知发送方分组有错误。"),v("br"),t._v("\n发送方收到NAK后"),v("em",[t._v("重传")]),t._v("分组。")]),t._v(" "),v("blockquote",[v("p",[t._v("Pardon！（没听清！请再说一遍）就是现实生活中的一种重传机制。")])])]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("⚠ 2.0的新机制")]),t._v(" "),v("p",[t._v("差错检验（校验和）、序列号、控制消息的反馈（ACK）、重传")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h330a4blu3j30q40ibgy0.jpg",alt:"1654833119521.png"}})]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h330erjrjgj30px0iqgwj.jpg",alt:"1654833379580.png"}})]),t._v(" "),v("div",{staticClass:"custom-block theorem"},[v("p",{staticClass:"title"},[t._v("2.0的缺陷")]),v("p",[t._v("2.0致命的缺陷是并没有考虑到"),v("em",[t._v("如果ACK和NAK出错了怎么办")]),t._v("，这样的话，就会导致整个传输过程的错误，进入"),v("em",[t._v("死锁")]),t._v("。"),v("br"),t._v("\n方法：可以给ACK和NAK增加校验和，检错并纠错（难度高），添加额外的控制消息（但是控制消息也可能会坏），一旦ACK和NAK错了就重传（比较简单，但是如果本身被正确接收那么再重传会接收重复分组）。这个问题将在下面得到解决.")])]),v("hr"),t._v(" "),v("h2",{attrs:{id:"rdt2-1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rdt2-1"}},[t._v("#")]),t._v(" rdt2.1")]),t._v(" "),v("blockquote",[v("p",[t._v("给每个分组增加序列号(SYN)，解决上面的2.0缺陷")])]),t._v(" "),v("p",[t._v("在rdt下，状态数量翻倍。"),v("br"),t._v("\n接收方需要记住当前状态。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h330tl8wbaj30qi0in4ah.jpg",alt:"1654834239596.png"}}),v("br"),t._v(" "),v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h330w8iqq1j30r70j5ank.jpg",alt:"1654834395729.png"}})]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("🔔 实例")]),t._v(" "),v("p",[t._v("在rdt2.0的基础之上，"),v("em",[t._v("发送方在打包数据包时添加了0或者1编号")]),t._v("，"),v("em",[t._v("同样ACK,NAK字段上也添加了0，1字段")]),t._v("，表示0.1号字段的确认或者否定。"),v("strong",[t._v("发送方就有了2种状态发送0号数据包，1号数据包，接收方也有了2种状态等待0号数据包和等待1号数据包")]),t._v("。现在假设情景发送方向接收方发送0号数据包，如果接收方接收到0号数据包，返回ACK，但是ACK出现翻转，接收方处于等待1号数据状态，发送方重复发送0号数据，接收方会拒绝0号数据，避免重复。如果接收方接收到0号数据包出现错误，返回NAK，但是NAK出现翻转，接收方处于等待0号数据状态，发送方继续发送1号数据，接收方会拒绝1号数据，避免错序。")])]),t._v(" "),v("h2",{attrs:{id:"rdt2-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rdt2-2"}},[t._v("#")]),t._v(" rdt2.2")]),t._v(" "),v("blockquote",[v("p",[t._v("取消NAK消息，只使用ACK消息进行确认。在ACK消息中显式加入被确认的分组的序列号。发送方在收到重复ACK之后，采取与NAK消息一样的操作，重传当前分组。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3357l0n8ij30rt0kyann.jpg",alt:"1654843354889.png"}})]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("🔔 实例")]),t._v(" "),v("p",[t._v("我们在ACK的信息上加上了期望的顺序号，"),v("strong",[t._v("现在假设情景发送方向接收方发送0号数据包")]),t._v("，"),v("em",[t._v("如果接收方接收到0号数据包，返回（ACK，1）")]),t._v("，"),v("strong",[t._v("发送方接着发送1号数据包")]),t._v("。"),v("strong",[t._v("如果接收方接收到0号数据包出现错误，返回（ACK，0），发送方重传0号数据包")]),t._v("。"),v("br"),t._v("\n也就是说，如果我发送为0，你接收正确，那么你必须发送1，之后我开始发下一个数据包（1），如果你发送0给我，那么我就要把0号数据包重传给你。")])]),t._v(" "),v("hr"),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("⚠ rdt2.x的缺陷")]),t._v(" "),v("p",[t._v("rdt2.x"),v("em",[t._v("实际上只考虑了错位的发生")]),t._v("，却"),v("em",[t._v("没有考虑丢包")]),t._v("。这个问题留给rdt3.0去解决。")])]),t._v(" "),v("h2",{attrs:{id:"rdt3-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rdt3-0"}},[t._v("#")]),t._v(" rdt3.0")]),t._v(" "),v("blockquote",[v("p",[t._v("如果A发送了一个分组，但是中途丢失，那么B就不会有任何反应，A也会一直等下去，那么就会崩溃。"),v("br"),t._v("\n解决方法："),v("em",[t._v("等待合理的时间之后没有收到ACK就重传")]),t._v("。但是出现了这样的问题：在合理时间之后才到达，那么会发生重复，不过可以使用序列号解决。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h335kf357vj30pf0g7aj4.jpg",alt:"1654844092106.png"}})]),t._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[t._v("丢包实例★")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h335lwrwwdj30re0fgn33.jpg",alt:"1654844180475.png"}}),v("br"),t._v(" "),v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h335t8vku1j30qt0fm114.jpg",alt:"1654844603717.png"}})])]),t._v(" "),v("p",[v("em",[t._v("rdt3.0能正常工作但是性能很差")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("🔔 实例")]),t._v(" "),v("p",[t._v("1Gbps的链路，15ms的端到端传播延迟，1KB的分组。")])]),t._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[t._v("计算")]),t._v(" "),v("p",[t._v("T（传播延迟）=L(包大小"),v("code",[t._v("bit)/R(速率")]),t._v("bit/s)=(8kb/pkt)/(10^9 b/sec)=8ms"),v("br"),t._v("\n则发送方利用率："),v("br"),t._v("\nU=(L/R)/(RTT+L/R)=0.008/30.009=0.00027，RTT是延迟时间"),v("br"),t._v("\n也就是说1Gbps的链路上每30ms才能发送一个分组=33KB/s"),v("br"),t._v("\n性能很差，"),v("em",[t._v("本质原因在于“停等”操作")]),t._v("。")])]),t._v(" "),v("h2",{attrs:{id:"流水线和滑动窗口机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流水线和滑动窗口机制"}},[t._v("#")]),t._v(" 流水线和滑动窗口机制")]),t._v(" "),v("blockquote",[v("p",[t._v("为了解决rdt3.0的缺陷，我们需要一个滑动窗口机制。利用流水线机制，我们连续发多个分组（例如三个），然后再进入等待状态。这样上面的利用率U=0.00027乘以3就会变成0.0008.在这种情况下，"),v("em",[t._v("我们需要更大的序列号范围")]),t._v("。发"),v("em",[t._v("送方和接收方需要更大的存储空间来缓存分组")]),t._v("。")])]),t._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[t._v("平等协议和流水线协议的对比")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3454h4o55j30lb08swhj.jpg",alt:"image.png"}})])]),t._v(" "),v("h3",{attrs:{id:"滑动窗口协议-sliding-window-protocol"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#滑动窗口协议-sliding-window-protocol"}},[t._v("#")]),t._v(" 滑动窗口协议（Sliding-Window Protocol）")]),t._v(" "),v("p",[v("strong",[t._v("窗口")]),t._v("：允许使用的序列号范围。"),v("br"),t._v(" "),v("strong",[t._v("窗口尺寸N")]),t._v("：最多有N个待确认的分组。"),v("br"),t._v(" "),v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3457ydgcbj30dp039jsq.jpg",alt:"1654918110027.png"}}),v("br"),t._v("\n在图中，窗口尺寸为14，即最多有14个待确认的分组。窗口不断往右边挪动进行确认。")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://blog.csdn.net/qq_53144843/article/details/120907815?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-5-120907815-blog-78242170.pc_relevant_blogantidownloadv1&spm=1001.2101.3001.4242.4&utm_relevant_index=7",target:"_blank",rel:"noopener noreferrer"}},[t._v("滑动窗口协议GBN和SR"),v("OutboundLink")],1)]),t._v(" "),v("h3",{attrs:{id:"gbn协议-回退重传协议-go-back-n-protocol"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gbn协议-回退重传协议-go-back-n-protocol"}},[t._v("#")]),t._v(" GBN协议（回退重传协议，Go-Back-N Protocol）")]),t._v(" "),v("div",{staticClass:"custom-block note"},[v("p",{staticClass:"custom-block-title"},[t._v("🌳GBN协议内容")]),t._v(" "),v("p",[t._v("1.分组头部包含k-bit序列号。"),v("br"),t._v("\n2.窗口尺寸为N，即最多允许N个待确认的分组。")]),t._v(" "),v("blockquote",[v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h345g49enkj30yb06mq5g.jpg",alt:"image.png"}}),v("br"),t._v("\nsend-base:最小的序列号"),v("br"),t._v("\nnextsequence:下一个待确认的分组序列号")])]),t._v(" "),v("p",[t._v("3."),v("em",[t._v("累计确认")]),t._v("ACK（n），"),v("strong",[t._v("确认到序列号n（包含n）的分组均被正确接收")]),t._v("。可以收到重复ACK。（接收者仅仅发送累计的确认，如果中间有数据损失则不予确认。"),v("br"),t._v("\n4.为传输分组设置计时器（timer），若超时Timeout事件：如果n这个序列号发生了超时事件"),v("em",[t._v("那么就要重传序列号大于等于n且还未收到ACK的所有分组(n+1、n+2、n+3····)")]),t._v(",可能会造成资源浪费。")])]),t._v(" "),v("p",[v("strong",[t._v("发送方扩展FSM")]),t._v("："),v("br"),t._v(" "),v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3460qbqynj30su0kvqis.jpg",alt:"f435557fdff300a3a403dbf824464de.png"}})]),t._v(" "),v("p",[v("strong",[t._v("接收方扩展FSM")]),t._v("："),v("br"),t._v(" "),v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h3464kbytlj30uw088q9f.jpg",alt:"1654919984120.png"}})]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("⚠ 接收方的机制")]),t._v(" "),v("p",[t._v("接收方发送拥有最高序列号的、已经被正确接收的分组ACK。GBN的"),v("em",[t._v("接收方不存在缓存")]),t._v("，它只需要记住唯一的expectedSequnce。可能产生重复的ACK。"),v("em",[t._v("对于乱序的分组，全部丢弃并重新确认序列号最大的、按序到达的分组")]),t._v("。"),v("strong",[t._v("如果我期望的分组的序列号是5，但是此时收到了7，则确认序列号4，将5、7丢弃")]),t._v("。")])]),t._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[t._v("举例：窗口大小为4时")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h346c7rk1aj30p50mb7ej.jpg",alt:"0b4761c6b46e1ea3420e4ab1d7c9518.png"}}),v("br"),t._v("\n窗口大小为4，发送方发送数据包0，1，2，3，然后进入等待状态，其中"),v("em",[t._v("数据包2丢失")]),t._v("，接收方返回Ack0，1，窗口滑动继续发送包4，5，此时包2计时超时，默认数据包2没有收到，按照GBN，发送方重新发送数据包2，3，4，5。这里可以看出数据包重复了。")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("🔔 练习题")]),t._v(" "),v("p",[t._v("数据链路层采用后退N帧（GBN）协议，发送方已经发送了编号为0～7的帧。"),v("em",[t._v("当计时器超时时")]),t._v("，若"),v("em",[t._v("发送方")]),t._v("只收到0、2、3号帧的确认，则发送方需要重发的帧数是多少？分别是那几个帧？")])]),t._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[t._v("答案")]),t._v(" "),v("p",[t._v("由于采用累计确认，只管收到的最大的ACK，因为收到了ACK3，那么说明帧2也正常发送到了（虽然ACK2丢失了），也就是说，发送方认为正确传送了0、1、2、3帧，所以超时之后，就重传3之后的所有帧，为4、5、6、7帧。")])]),t._v(" "),v("h3",{attrs:{id:"sr协议-选择重传协议-selective-repeat"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#sr协议-选择重传协议-selective-repeat"}},[t._v("#")]),t._v(" SR协议(选择重传协议，Selective Repeat)")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("🔔 GBN的缺陷")]),t._v(" "),v("p",[t._v("GBN使用累"),v("em",[t._v("计确认机制，重传时导致很多重传")]),t._v("，造成资源浪费，因此"),v("strong",[t._v("SR协议使用单独确认机制，设置了缓存机制，缓存乱序到达的分组")]),t._v("，为每一个分组设置单独的计时器。此时，发送方和接收方均使用滑动窗口了。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h35a4yzx8ij310b0k5ain.jpg",alt:"1655003041611.png"}})]),t._v(" "),v("div",{staticClass:"custom-block note"},[v("p",{staticClass:"custom-block-title"},[t._v("🌳 发送方")]),t._v(" "),v("p",[v("em",[t._v("从上层接收的数据")]),t._v("："),v("br"),t._v("\n如果窗口有空位，发送数据包。"),v("br"),t._v(" "),v("em",[t._v("如果第n帧超时")]),t._v("："),v("br"),t._v("\n重发n数据包，重启n的定时器。"),v("br"),t._v(" "),v("em",[t._v("如果收到n的ACK")]),t._v("："),v("br"),t._v("\n标记n帧为已完成。如果n为最小的没被接收的帧，那么在接收到ACKn后，窗口向前滑动。")])]),t._v(" "),v("div",{staticClass:"custom-block note"},[v("p",{staticClass:"custom-block-title"},[t._v("🌳 接收方")]),t._v(" "),v("p",[v("em",[t._v("收到分组n")]),t._v("："),v("br"),t._v("\n如果在（recevbase，recevbase+N-1）内，那么表示n是期望收到的，发送确认ACK，如果收到的是乱序的分组，那么缓存下来（buffer），如果是正常按序到达的，那么交付给上层并滑动窗口。"),v("br"),t._v(" "),v("em",[t._v("如果收到的分组在(recevbase-N,recevbase-1)范围内")]),t._v("："),v("br"),t._v("\n这说明之前正确接收分组时发送的ACK丢失了，没有正确到达发送端，因此要再次确认ACK（n）。"),v("br"),t._v(" "),v("em",[t._v("其他时候")]),t._v("："),v("br"),t._v("\n忽略。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h35aqt126qj30vw0ljgvy.jpg",alt:"1655004303612.png"}}),v("br"),t._v("\n上图发完5之后不发了，是因为必须要等2交付。")]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("⚠ SR困境")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h35az8vzrkj30je0hddkq.jpg",alt:"image.png"}}),v("br"),t._v("\n因为接收方不能“看见发送方”采取的动作。接收方所能观察到的是它从信道中收到的以及它向信道中发出的报文序列。就其关注而言，上图的情况时等同的。显然，窗口长度比序列号空间小1时协议无法工作。序列号空间大小与窗口尺寸要满足："),v("br"),t._v(" "),v("em",[t._v("Ns+Nr<=2^k，Ns表示发送方的窗口大小，Nr表示接收方的窗口大小，k表示序列号位数")]),t._v("。")])]),t._v(" "),v("h3",{attrs:{id:"比较gbn和sr"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#比较gbn和sr"}},[t._v("#")]),t._v(" 比较GBN和SR")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://jetzihan-img.oss-cn-beijing.aliyuncs.com/blog/img/006SHRs9gy1h35axmadpuj30rj0acjv1.jpg",alt:"image.png"}})])])}),[],!1,null,null,null);s.default=a.exports}}]);